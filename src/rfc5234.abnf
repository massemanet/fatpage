; RFC 5234. ABNF. Crocker & Overell. January 2008.

rulelist       =  1*( rule / (*c-wsp c-nl) )

; continues if next line starts with white space
rule           =  rulename defined-as elements c-nl       ;; {rule, Y1, Y3}

rulename       =  ALPHA *(ALPHA / DIGIT / "-")            ;; string([Y1|Y2])

; basic rules definition and incremental alternatives
defined-as     =  *c-wsp ("=" / "=/") *c-wsp              ;; string(Y2)

elements       =  alternation *c-wsp                      ;; Y1

c-wsp          =  WSP / (c-nl WSP)

; comment or newline
c-nl           =  comment / CRLF


comment        =  ";" *(WSP / VCHAR) CRLF                ;; {comment, string(Y2)}

alternation    =  concatenation *ws-concat               ;; {alt, [Y1|Y2]}

ws-concat      =  *c-wsp "/" *c-wsp concatenation        ;; Y4

concatenation  =  repetition *ws-rep                     ;; {seq, [Y1|Y2]}

ws-rep         =  1*c-wsp repetition                     ;; Y2

repetition     =  [repeat] element                       ;; {rep, Y1, Y2}

repeat         =  rep-star / rep-dig

rep-star       =  *DIGIT "*" *DIGIT                      ;; {Y1, Y3}

rep-dig        =  1*DIGIT                                ;; {Y, Y}

element        =  rulename / group / option /
                  char-val / num-val / prose-val

group          =  "(" *c-wsp alternation *c-wsp ")"      ;; Y3

option         =  "[" *c-wsp alternation *c-wsp "]"      ;; {rep, {0, 1}, Y3}

; quoted string of SP and VCHAR without DQUOTE
char-val       =  DQUOTE *(%x20-21 / %x23-7E) DQUOTE     ;; string(Y2)

num-val        =  "%" (bin-val / dec-val / hex-val)

; series of concatenated bit values or single ONEOF range
bin-val        =  "b" 1*BIT [ 1*("." 1*BIT) / ("-" 1*BIT) ]

dec-val        =  "d" 1*DIGIT [ 1*("." 1*DIGIT) / ("-" 1*DIGIT) ]

hex-val        =  "x" 1*HEXDIG [ 1*("." 1*HEXDIG) / ("-" 1*HEXDIG) ]

; bracketed string of SP and VCHAR without angles
; prose description, to be used as last resort
prose-val      =  "<" *(%x20-3D / %x3F-7E) ">"           ;; string(Y2)
