term     = ternary / list / cons / tuple / avar / string / number

list     = *WS "[" *WS [terms] *WS "]"                ;; {list, Y4}

cons     = *WS "[" *WS terms *WS "|" *WS term *WS "]" ;; {cons, Y4, Y8}

tuple    = *WS "{" *WS [terms] *WS "}"                ;; {tuple, Y4}

ternary  = *WS cond *WS "?" *WS term *WS ":" *WS term ;; {ternary, Y2, Y6, Y10}

terms    = *WS term *WS *cterm                        ;; [Y2 | Y4]

cterm    = *WS "," *WS term                           ;; Y4

avar     = *WS (var / atom-var / str-var / num-var)   ;; Y2

number   = *WS 1*DIGIT                                ;; i#Y2

cond     = var *WS op *WS term                        ;; {op, Y3, Y1, Y5}

atom-var = "'" var "'"                                ;; {var, 'Y2'}

str-var  = DQUOTE var DQUOTE                          ;; {var, "Y2"}

num-var  = [ "i" / "d" / "x" / var] "#" var           ;; {o Y3, Y1}

var      = "Y" *DIGIT                                 ;; {var, "Y"}

string   = ALPHA *(ALPHA / DIGIT / "-" / "_")         ;; {string, "Y"}

op       = "==" / "!=" / "<" / ">" / "=<" / ">="      ;; 'Y'
